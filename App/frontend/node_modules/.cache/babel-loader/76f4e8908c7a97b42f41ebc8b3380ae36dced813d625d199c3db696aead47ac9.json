{"ast":null,"code":"/*!\n* tiptap v1.32.1\n* (c) 2021 Ã¼berdosis GbR (limited liability)\n* @license MIT\n*/\n\nimport { EditorState, Plugin, PluginKey, TextSelection } from 'prosemirror-state';\nexport { NodeSelection, Plugin, PluginKey, TextSelection } from 'prosemirror-state';\nimport { EditorView } from 'prosemirror-view';\nimport { Schema, DOMParser, DOMSerializer } from 'prosemirror-model';\nimport { dropCursor } from 'prosemirror-dropcursor';\nimport { gapCursor } from 'prosemirror-gapcursor';\nimport { keymap } from 'prosemirror-keymap';\nimport { baseKeymap } from 'prosemirror-commands';\nimport { inputRules, undoInputRule } from 'prosemirror-inputrules';\nimport { getMarkRange, markIsActive, getMarkAttrs, nodeIsActive, getNodeAttrs } from 'tiptap-utils';\nimport Vue from 'vue';\nimport { setBlockType } from 'tiptap-commands';\nfunction camelCase(str) {\n  return str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, (word, index) => index === 0 ? word.toLowerCase() : word.toUpperCase()).replace(/\\s+/g, '');\n}\nclass ComponentView {\n  constructor(component, _ref) {\n    let {\n      editor,\n      extension,\n      parent,\n      node,\n      view,\n      decorations,\n      getPos\n    } = _ref;\n    this.component = component;\n    this.editor = editor;\n    this.extension = extension;\n    this.parent = parent;\n    this.node = node;\n    this.view = view;\n    this.decorations = decorations;\n    this.isNode = !!this.node.marks;\n    this.isMark = !this.isNode;\n    this.getPos = this.isMark ? this.getMarkPos : getPos;\n    this.captureEvents = true;\n    this.dom = this.createDOM();\n    this.contentDOM = this.vm.$refs.content;\n  }\n  createDOM() {\n    const Component = Vue.extend(this.component);\n    const props = {\n      editor: this.editor,\n      node: this.node,\n      view: this.view,\n      getPos: () => this.getPos(),\n      decorations: this.decorations,\n      selected: false,\n      options: this.extension.options,\n      updateAttrs: attrs => this.updateAttrs(attrs)\n    };\n    if (typeof this.extension.setSelection === 'function') {\n      this.setSelection = this.extension.setSelection;\n    }\n    if (typeof this.extension.update === 'function') {\n      this.update = this.extension.update;\n    }\n    this.vm = new Component({\n      parent: this.parent,\n      propsData: props\n    }).$mount();\n    return this.vm.$el;\n  }\n  update(node, decorations) {\n    if (node.type !== this.node.type) {\n      return false;\n    }\n    if (node === this.node && this.decorations === decorations) {\n      return true;\n    }\n    this.node = node;\n    this.decorations = decorations;\n    this.updateComponentProps({\n      node,\n      decorations\n    });\n    return true;\n  }\n  updateComponentProps(props) {\n    if (!this.vm._props) {\n      return;\n    } // Update props in component\n    // TODO: Avoid mutating a prop directly.\n    // Maybe there is a better way to do this?\n\n    const originalSilent = Vue.config.silent;\n    Vue.config.silent = true;\n    Object.entries(props).forEach(_ref2 => {\n      let [key, value] = _ref2;\n      this.vm._props[key] = value;\n    }); // this.vm._props.node = node\n    // this.vm._props.decorations = decorations\n\n    Vue.config.silent = originalSilent;\n  }\n  updateAttrs(attrs) {\n    if (!this.view.editable) {\n      return;\n    }\n    const {\n      state\n    } = this.view;\n    const {\n      type\n    } = this.node;\n    const pos = this.getPos();\n    const newAttrs = {\n      ...this.node.attrs,\n      ...attrs\n    };\n    const transaction = this.isMark ? state.tr.removeMark(pos.from, pos.to, type).addMark(pos.from, pos.to, type.create(newAttrs)) : state.tr.setNodeMarkup(pos, null, newAttrs);\n    this.view.dispatch(transaction);\n  } // prevent a full re-render of the vue component on update\n  // we'll handle prop updates in `update()`\n\n  ignoreMutation(mutation) {\n    // allow leaf nodes to be selected\n    if (mutation.type === 'selection') {\n      return false;\n    }\n    if (!this.contentDOM) {\n      return true;\n    }\n    return !this.contentDOM.contains(mutation.target);\n  } // disable (almost) all prosemirror event listener for node views\n\n  stopEvent(event) {\n    if (typeof this.extension.stopEvent === 'function') {\n      return this.extension.stopEvent(event);\n    }\n    const draggable = !!this.extension.schema.draggable; // support a custom drag handle\n\n    if (draggable && event.type === 'mousedown') {\n      const dragHandle = event.target.closest && event.target.closest('[data-drag-handle]');\n      const isValidDragHandle = dragHandle && (this.dom === dragHandle || this.dom.contains(dragHandle));\n      if (isValidDragHandle) {\n        this.captureEvents = false;\n        document.addEventListener('dragend', () => {\n          this.captureEvents = true;\n        }, {\n          once: true\n        });\n      }\n    }\n    const isCopy = event.type === 'copy';\n    const isPaste = event.type === 'paste';\n    const isCut = event.type === 'cut';\n    const isDrag = event.type.startsWith('drag') || event.type === 'drop';\n    if (draggable && isDrag || isCopy || isPaste || isCut) {\n      return false;\n    }\n    return this.captureEvents;\n  }\n  selectNode() {\n    this.updateComponentProps({\n      selected: true\n    });\n  }\n  deselectNode() {\n    this.updateComponentProps({\n      selected: false\n    });\n  }\n  getMarkPos() {\n    const pos = this.view.posAtDOM(this.dom);\n    const resolvedPos = this.view.state.doc.resolve(pos);\n    const range = getMarkRange(resolvedPos, this.node.type);\n    return range;\n  }\n  destroy() {\n    this.vm.$destroy();\n  }\n}\nclass Emitter {\n  // Add an event listener for given event\n  on(event, fn) {\n    this._callbacks = this._callbacks || {}; // Create namespace for this event\n\n    if (!this._callbacks[event]) {\n      this._callbacks[event] = [];\n    }\n    this._callbacks[event].push(fn);\n    return this;\n  }\n  emit(event) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    this._callbacks = this._callbacks || {};\n    const callbacks = this._callbacks[event];\n    if (callbacks) {\n      callbacks.forEach(callback => callback.apply(this, args));\n    }\n    return this;\n  } // Remove event listener for given event.\n  // If fn is not provided, all event listeners for that event will be removed.\n  // If neither is provided, all event listeners will be removed.\n\n  off(event, fn) {\n    if (!arguments.length) {\n      this._callbacks = {};\n    } else {\n      // event listeners for the given event\n      const callbacks = this._callbacks ? this._callbacks[event] : null;\n      if (callbacks) {\n        if (fn) {\n          this._callbacks[event] = callbacks.filter(cb => cb !== fn); // remove specific handler\n        } else {\n          delete this._callbacks[event]; // remove all handlers\n        }\n      }\n    }\n\n    return this;\n  }\n}\nclass Extension {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.options = {\n      ...this.defaultOptions,\n      ...options\n    };\n  }\n  init() {\n    return null;\n  }\n  bindEditor() {\n    let editor = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    this.editor = editor;\n  }\n  get name() {\n    return null;\n  }\n  get type() {\n    return 'extension';\n  }\n  get defaultOptions() {\n    return {};\n  }\n  get plugins() {\n    return [];\n  }\n  inputRules() {\n    return [];\n  }\n  pasteRules() {\n    return [];\n  }\n  keys() {\n    return {};\n  }\n}\nclass ExtensionManager {\n  constructor() {\n    let extensions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    let editor = arguments.length > 1 ? arguments[1] : undefined;\n    extensions.forEach(extension => {\n      extension.bindEditor(editor);\n      extension.init();\n    });\n    this.extensions = extensions;\n  }\n  get nodes() {\n    return this.extensions.filter(extension => extension.type === 'node').reduce((nodes, _ref3) => {\n      let {\n        name,\n        schema\n      } = _ref3;\n      return {\n        ...nodes,\n        [name]: schema\n      };\n    }, {});\n  }\n  get options() {\n    const {\n      view\n    } = this;\n    return this.extensions.reduce((nodes, extension) => ({\n      ...nodes,\n      [extension.name]: new Proxy(extension.options, {\n        set(obj, prop, value) {\n          const changed = obj[prop] !== value;\n          Object.assign(obj, {\n            [prop]: value\n          });\n          if (changed) {\n            view.updateState(view.state);\n          }\n          return true;\n        }\n      })\n    }), {});\n  }\n  get marks() {\n    return this.extensions.filter(extension => extension.type === 'mark').reduce((marks, _ref4) => {\n      let {\n        name,\n        schema\n      } = _ref4;\n      return {\n        ...marks,\n        [name]: schema\n      };\n    }, {});\n  }\n  get plugins() {\n    return this.extensions.filter(extension => extension.plugins).reduce((allPlugins, _ref5) => {\n      let {\n        plugins\n      } = _ref5;\n      return [...allPlugins, ...plugins];\n    }, []);\n  }\n  keymaps(_ref6) {\n    let {\n      schema\n    } = _ref6;\n    const extensionKeymaps = this.extensions.filter(extension => ['extension'].includes(extension.type)).filter(extension => extension.keys).map(extension => extension.keys({\n      schema\n    }));\n    const nodeMarkKeymaps = this.extensions.filter(extension => ['node', 'mark'].includes(extension.type)).filter(extension => extension.keys).map(extension => extension.keys({\n      type: schema[`${extension.type}s`][extension.name],\n      schema\n    }));\n    return [...extensionKeymaps, ...nodeMarkKeymaps].map(keys => keymap(keys));\n  }\n  inputRules(_ref7) {\n    let {\n      schema,\n      excludedExtensions\n    } = _ref7;\n    if (!(excludedExtensions instanceof Array) && excludedExtensions) return [];\n    const allowedExtensions = excludedExtensions instanceof Array ? this.extensions.filter(extension => !excludedExtensions.includes(extension.name)) : this.extensions;\n    const extensionInputRules = allowedExtensions.filter(extension => ['extension'].includes(extension.type)).filter(extension => extension.inputRules).map(extension => extension.inputRules({\n      schema\n    }));\n    const nodeMarkInputRules = allowedExtensions.filter(extension => ['node', 'mark'].includes(extension.type)).filter(extension => extension.inputRules).map(extension => extension.inputRules({\n      type: schema[`${extension.type}s`][extension.name],\n      schema\n    }));\n    return [...extensionInputRules, ...nodeMarkInputRules].reduce((allInputRules, inputRules) => [...allInputRules, ...inputRules], []);\n  }\n  pasteRules(_ref8) {\n    let {\n      schema,\n      excludedExtensions\n    } = _ref8;\n    if (!(excludedExtensions instanceof Array) && excludedExtensions) return [];\n    const allowedExtensions = excludedExtensions instanceof Array ? this.extensions.filter(extension => !excludedExtensions.includes(extension.name)) : this.extensions;\n    const extensionPasteRules = allowedExtensions.filter(extension => ['extension'].includes(extension.type)).filter(extension => extension.pasteRules).map(extension => extension.pasteRules({\n      schema\n    }));\n    const nodeMarkPasteRules = allowedExtensions.filter(extension => ['node', 'mark'].includes(extension.type)).filter(extension => extension.pasteRules).map(extension => extension.pasteRules({\n      type: schema[`${extension.type}s`][extension.name],\n      schema\n    }));\n    return [...extensionPasteRules, ...nodeMarkPasteRules].reduce((allPasteRules, pasteRules) => [...allPasteRules, ...pasteRules], []);\n  }\n  commands(_ref9) {\n    let {\n      schema,\n      view\n    } = _ref9;\n    return this.extensions.filter(extension => extension.commands).reduce((allCommands, extension) => {\n      const {\n        name,\n        type\n      } = extension;\n      const commands = {};\n      const value = extension.commands({\n        schema,\n        ...(['node', 'mark'].includes(type) ? {\n          type: schema[`${type}s`][name]\n        } : {})\n      });\n      const apply = (cb, attrs) => {\n        if (!view.editable) {\n          return false;\n        }\n        view.focus();\n        return cb(attrs)(view.state, view.dispatch, view);\n      };\n      const handle = (_name, _value) => {\n        if (Array.isArray(_value)) {\n          commands[_name] = attrs => _value.forEach(callback => apply(callback, attrs));\n        } else if (typeof _value === 'function') {\n          commands[_name] = attrs => apply(_value, attrs);\n        }\n      };\n      if (typeof value === 'object') {\n        Object.entries(value).forEach(_ref10 => {\n          let [commandName, commandValue] = _ref10;\n          handle(commandName, commandValue);\n        });\n      } else {\n        handle(name, value);\n      }\n      return {\n        ...allCommands,\n        ...commands\n      };\n    }, {});\n  }\n}\nfunction injectCSS(css) {\n  if (process.env.NODE_ENV !== 'test') {\n    const style = document.createElement('style');\n    style.type = 'text/css';\n    style.textContent = css;\n    const {\n      head\n    } = document;\n    const {\n      firstChild\n    } = head;\n    if (firstChild) {\n      head.insertBefore(style, firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  }\n}\nclass Mark extends Extension {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super(options);\n  }\n  get type() {\n    return 'mark';\n  }\n  get view() {\n    return null;\n  }\n  get schema() {\n    return null;\n  }\n  command() {\n    return () => {};\n  }\n}\nfunction minMax() {\n  let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let max = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  return Math.min(Math.max(parseInt(value, 10), min), max);\n}\nclass Node extends Extension {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super(options);\n  }\n  get type() {\n    return 'node';\n  }\n  get view() {\n    return null;\n  }\n  get schema() {\n    return null;\n  }\n  command() {\n    return () => {};\n  }\n}\nclass Doc extends Node {\n  get name() {\n    return 'doc';\n  }\n  get schema() {\n    return {\n      content: 'block+'\n    };\n  }\n}\nclass Paragraph extends Node {\n  get name() {\n    return 'paragraph';\n  }\n  get schema() {\n    return {\n      content: 'inline*',\n      group: 'block',\n      draggable: false,\n      parseDOM: [{\n        tag: 'p'\n      }],\n      toDOM: () => ['p', 0]\n    };\n  }\n  commands(_ref11) {\n    let {\n      type\n    } = _ref11;\n    return () => setBlockType(type);\n  }\n}\nclass Text extends Node {\n  get name() {\n    return 'text';\n  }\n  get schema() {\n    return {\n      group: 'inline'\n    };\n  }\n}\nvar css = \".ProseMirror {\\n  position: relative;\\n}\\n\\n.ProseMirror {\\n  word-wrap: break-word;\\n  white-space: pre-wrap;\\n  -webkit-font-variant-ligatures: none;\\n  font-variant-ligatures: none;\\n}\\n\\n.ProseMirror pre {\\n  white-space: pre-wrap;\\n}\\n\\n.ProseMirror-gapcursor {\\n  display: none;\\n  pointer-events: none;\\n  position: absolute;\\n}\\n\\n.ProseMirror-gapcursor:after {\\n  content: \\\"\\\";\\n  display: block;\\n  position: absolute;\\n  top: -2px;\\n  width: 20px;\\n  border-top: 1px solid black;\\n  animation: ProseMirror-cursor-blink 1.1s steps(2, start) infinite;\\n}\\n\\n@keyframes ProseMirror-cursor-blink {\\n  to {\\n    visibility: hidden;\\n  }\\n}\\n\\n.ProseMirror-hideselection *::selection {\\n  background: transparent;\\n}\\n\\n.ProseMirror-hideselection *::-moz-selection {\\n  background: transparent;\\n}\\n\\n.ProseMirror-hideselection * {\\n  caret-color: transparent;\\n}\\n\\n.ProseMirror-focused .ProseMirror-gapcursor {\\n  display: block;\\n}\\n\";\nclass Editor extends Emitter {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super();\n    this.defaultOptions = {\n      editorProps: {},\n      editable: true,\n      autoFocus: null,\n      extensions: [],\n      content: '',\n      topNode: 'doc',\n      emptyDocument: {\n        type: 'doc',\n        content: [{\n          type: 'paragraph'\n        }]\n      },\n      useBuiltInExtensions: true,\n      disableInputRules: false,\n      disablePasteRules: false,\n      dropCursor: {},\n      enableDropCursor: true,\n      enableGapCursor: true,\n      parseOptions: {},\n      injectCSS: true,\n      onInit: () => {},\n      onTransaction: () => {},\n      onUpdate: () => {},\n      onFocus: () => {},\n      onBlur: () => {},\n      onPaste: () => {},\n      onDrop: () => {}\n    };\n    this.events = ['init', 'transaction', 'update', 'focus', 'blur', 'paste', 'drop'];\n    this.init(options);\n  }\n  init() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.setOptions({\n      ...this.defaultOptions,\n      ...options\n    });\n    this.focused = false;\n    this.selection = {\n      from: 0,\n      to: 0\n    };\n    this.element = document.createElement('div');\n    this.extensions = this.createExtensions();\n    this.nodes = this.createNodes();\n    this.marks = this.createMarks();\n    this.schema = this.createSchema();\n    this.plugins = this.createPlugins();\n    this.keymaps = this.createKeymaps();\n    this.inputRules = this.createInputRules();\n    this.pasteRules = this.createPasteRules();\n    this.view = this.createView();\n    this.commands = this.createCommands();\n    this.setActiveNodesAndMarks();\n    if (this.options.injectCSS) {\n      injectCSS(css);\n    }\n    if (this.options.autoFocus !== null) {\n      this.focus(this.options.autoFocus);\n    }\n    this.events.forEach(name => {\n      this.on(name, this.options[camelCase(`on ${name}`)] || (() => {}));\n    });\n    this.emit('init', {\n      view: this.view,\n      state: this.state\n    }); // give extension manager access to our view\n\n    this.extensions.view = this.view;\n  }\n  setOptions(options) {\n    this.options = {\n      ...this.options,\n      ...options\n    };\n    if (this.view && this.state) {\n      this.view.updateState(this.state);\n    }\n  }\n  get builtInExtensions() {\n    if (!this.options.useBuiltInExtensions) {\n      return [];\n    }\n    return [new Doc(), new Text(), new Paragraph()];\n  }\n  get state() {\n    return this.view ? this.view.state : null;\n  }\n  createExtensions() {\n    return new ExtensionManager([...this.builtInExtensions, ...this.options.extensions], this);\n  }\n  createPlugins() {\n    return this.extensions.plugins;\n  }\n  createKeymaps() {\n    return this.extensions.keymaps({\n      schema: this.schema\n    });\n  }\n  createInputRules() {\n    return this.extensions.inputRules({\n      schema: this.schema,\n      excludedExtensions: this.options.disableInputRules\n    });\n  }\n  createPasteRules() {\n    return this.extensions.pasteRules({\n      schema: this.schema,\n      excludedExtensions: this.options.disablePasteRules\n    });\n  }\n  createCommands() {\n    return this.extensions.commands({\n      schema: this.schema,\n      view: this.view\n    });\n  }\n  createNodes() {\n    return this.extensions.nodes;\n  }\n  createMarks() {\n    return this.extensions.marks;\n  }\n  createSchema() {\n    return new Schema({\n      topNode: this.options.topNode,\n      nodes: this.nodes,\n      marks: this.marks\n    });\n  }\n  createState() {\n    return EditorState.create({\n      schema: this.schema,\n      doc: this.createDocument(this.options.content),\n      plugins: [...this.plugins, inputRules({\n        rules: this.inputRules\n      }), ...this.pasteRules, ...this.keymaps, keymap({\n        Backspace: undoInputRule\n      }), keymap(baseKeymap), ...(this.options.enableDropCursor ? [dropCursor(this.options.dropCursor)] : []), ...(this.options.enableGapCursor ? [gapCursor()] : []), new Plugin({\n        key: new PluginKey('editable'),\n        props: {\n          editable: () => this.options.editable\n        }\n      }), new Plugin({\n        props: {\n          attributes: {\n            tabindex: 0\n          },\n          handleDOMEvents: {\n            focus: (view, event) => {\n              this.focused = true;\n              this.emit('focus', {\n                event,\n                state: view.state,\n                view\n              });\n              const transaction = this.state.tr.setMeta('focused', true);\n              this.view.dispatch(transaction);\n            },\n            blur: (view, event) => {\n              this.focused = false;\n              this.emit('blur', {\n                event,\n                state: view.state,\n                view\n              });\n              const transaction = this.state.tr.setMeta('focused', false);\n              this.view.dispatch(transaction);\n            }\n          }\n        }\n      }), new Plugin({\n        props: this.options.editorProps\n      })]\n    });\n  }\n  createDocument(content) {\n    let parseOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.options.parseOptions;\n    if (content === null) {\n      return this.schema.nodeFromJSON(this.options.emptyDocument);\n    }\n    if (typeof content === 'object') {\n      try {\n        return this.schema.nodeFromJSON(content);\n      } catch (error) {\n        console.warn('[tiptap warn]: Invalid content.', 'Passed value:', content, 'Error:', error);\n        return this.schema.nodeFromJSON(this.options.emptyDocument);\n      }\n    }\n    if (typeof content === 'string') {\n      const htmlString = `<div>${content}</div>`;\n      const parser = new window.DOMParser();\n      const element = parser.parseFromString(htmlString, 'text/html').body.firstElementChild;\n      return DOMParser.fromSchema(this.schema).parse(element, parseOptions);\n    }\n    return false;\n  }\n  createView() {\n    var _this = this;\n    return new EditorView(this.element, {\n      state: this.createState(),\n      handlePaste: function () {\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n        _this.emit('paste', ...args);\n      },\n      handleDrop: function () {\n        for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          args[_key3] = arguments[_key3];\n        }\n        _this.emit('drop', ...args);\n      },\n      dispatchTransaction: this.dispatchTransaction.bind(this)\n    });\n  }\n  setParentComponent() {\n    let component = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    if (!component) {\n      return;\n    }\n    this.view.setProps({\n      nodeViews: this.initNodeViews({\n        parent: component,\n        extensions: [...this.builtInExtensions, ...this.options.extensions]\n      })\n    });\n  }\n  initNodeViews(_ref12) {\n    let {\n      parent,\n      extensions\n    } = _ref12;\n    return extensions.filter(extension => ['node', 'mark'].includes(extension.type)).filter(extension => extension.view).reduce((nodeViews, extension) => {\n      const nodeView = (node, view, getPos, decorations) => {\n        const component = extension.view;\n        return new ComponentView(component, {\n          editor: this,\n          extension,\n          parent,\n          node,\n          view,\n          getPos,\n          decorations\n        });\n      };\n      return {\n        ...nodeViews,\n        [extension.name]: nodeView\n      };\n    }, {});\n  }\n  dispatchTransaction(transaction) {\n    const newState = this.state.apply(transaction);\n    this.view.updateState(newState);\n    this.selection = {\n      from: this.state.selection.from,\n      to: this.state.selection.to\n    };\n    this.setActiveNodesAndMarks();\n    this.emit('transaction', {\n      getHTML: this.getHTML.bind(this),\n      getJSON: this.getJSON.bind(this),\n      state: this.state,\n      transaction\n    });\n    if (!transaction.docChanged || transaction.getMeta('preventUpdate')) {\n      return;\n    }\n    this.emitUpdate(transaction);\n  }\n  emitUpdate(transaction) {\n    this.emit('update', {\n      getHTML: this.getHTML.bind(this),\n      getJSON: this.getJSON.bind(this),\n      state: this.state,\n      transaction\n    });\n  }\n  resolveSelection() {\n    let position = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    if (this.selection && position === null) {\n      return this.selection;\n    }\n    if (position === 'start' || position === true) {\n      return {\n        from: 0,\n        to: 0\n      };\n    }\n    if (position === 'end') {\n      const {\n        doc\n      } = this.state;\n      return {\n        from: doc.content.size,\n        to: doc.content.size\n      };\n    }\n    return {\n      from: position,\n      to: position\n    };\n  }\n  focus() {\n    let position = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    if (this.view.focused && position === null || position === false) {\n      return;\n    }\n    const {\n      from,\n      to\n    } = this.resolveSelection(position);\n    this.setSelection(from, to);\n    setTimeout(() => this.view.focus(), 10);\n  }\n  setSelection() {\n    let from = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let to = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    const {\n      doc,\n      tr\n    } = this.state;\n    const resolvedFrom = minMax(from, 0, doc.content.size);\n    const resolvedEnd = minMax(to, 0, doc.content.size);\n    const selection = TextSelection.create(doc, resolvedFrom, resolvedEnd);\n    const transaction = tr.setSelection(selection);\n    this.view.dispatch(transaction);\n  }\n  blur() {\n    this.view.dom.blur();\n  }\n  getSchemaJSON() {\n    return JSON.parse(JSON.stringify({\n      nodes: this.extensions.nodes,\n      marks: this.extensions.marks\n    }));\n  }\n  getHTML() {\n    const div = document.createElement('div');\n    const fragment = DOMSerializer.fromSchema(this.schema).serializeFragment(this.state.doc.content);\n    div.appendChild(fragment);\n    return div.innerHTML;\n  }\n  getJSON() {\n    return this.state.doc.toJSON();\n  }\n  setContent() {\n    let content = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let emitUpdate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let parseOptions = arguments.length > 2 ? arguments[2] : undefined;\n    const {\n      doc,\n      tr\n    } = this.state;\n    const document = this.createDocument(content, parseOptions);\n    const selection = TextSelection.create(doc, 0, doc.content.size);\n    const transaction = tr.setSelection(selection).replaceSelectionWith(document, false).setMeta('preventUpdate', !emitUpdate);\n    this.view.dispatch(transaction);\n  }\n  clearContent() {\n    let emitUpdate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    this.setContent(this.options.emptyDocument, emitUpdate);\n  }\n  setActiveNodesAndMarks() {\n    var _this2 = this;\n    this.activeMarks = Object.entries(this.schema.marks).reduce((marks, _ref13) => {\n      let [name, mark] = _ref13;\n      return {\n        ...marks,\n        [name]: function () {\n          let attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n          return markIsActive(_this2.state, mark, attrs);\n        }\n      };\n    }, {});\n    this.activeMarkAttrs = Object.entries(this.schema.marks).reduce((marks, _ref14) => {\n      let [name, mark] = _ref14;\n      return {\n        ...marks,\n        [name]: getMarkAttrs(this.state, mark)\n      };\n    }, {});\n    this.activeNodes = Object.entries(this.schema.nodes).reduce((nodes, _ref15) => {\n      let [name, node] = _ref15;\n      return {\n        ...nodes,\n        [name]: function () {\n          let attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n          return nodeIsActive(_this2.state, node, attrs);\n        }\n      };\n    }, {});\n  }\n  getMarkAttrs() {\n    let type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    return this.activeMarkAttrs[type];\n  }\n  getNodeAttrs() {\n    let type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    return {\n      ...getNodeAttrs(this.state, this.schema.nodes[type])\n    };\n  }\n  get isActive() {\n    return Object.entries({\n      ...this.activeMarks,\n      ...this.activeNodes\n    }).reduce((types, _ref16) => {\n      let [name, value] = _ref16;\n      return {\n        ...types,\n        [name]: function () {\n          let attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n          return value(attrs);\n        }\n      };\n    }, {});\n  }\n  registerPlugin() {\n    let plugin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    let handlePlugins = arguments.length > 1 ? arguments[1] : undefined;\n    const plugins = typeof handlePlugins === 'function' ? handlePlugins(plugin, this.state.plugins) : [plugin, ...this.state.plugins];\n    const newState = this.state.reconfigure({\n      plugins\n    });\n    this.view.updateState(newState);\n  }\n  unregisterPlugin() {\n    let name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    if (!name || !this.view.docView) {\n      return;\n    }\n    const newState = this.state.reconfigure({\n      plugins: this.state.plugins.filter(plugin => !plugin.key.startsWith(`${name}$`))\n    });\n    this.view.updateState(newState);\n  }\n  destroy() {\n    if (!this.view) {\n      return;\n    }\n    this.view.destroy();\n  }\n}\nvar EditorContent = {\n  props: {\n    editor: {\n      default: null,\n      type: Object\n    }\n  },\n  watch: {\n    editor: {\n      immediate: true,\n      handler(editor) {\n        if (editor && editor.element) {\n          this.$nextTick(() => {\n            this.$el.appendChild(editor.element.firstChild);\n            editor.setParentComponent(this);\n          });\n        }\n      }\n    }\n  },\n  render(createElement) {\n    return createElement('div');\n  },\n  beforeDestroy() {\n    this.editor.element = this.$el;\n  }\n};\nclass Menu {\n  constructor(_ref17) {\n    let {\n      options\n    } = _ref17;\n    this.options = options;\n    this.preventHide = false; // the mousedown event is fired before blur so we can prevent it\n\n    this.mousedownHandler = this.handleClick.bind(this);\n    this.options.element.addEventListener('mousedown', this.mousedownHandler, {\n      capture: true\n    });\n    this.blurHandler = () => {\n      if (this.preventHide) {\n        this.preventHide = false;\n        return;\n      }\n      this.options.editor.emit('menubar:focusUpdate', false);\n    };\n    this.options.editor.on('blur', this.blurHandler);\n  }\n  handleClick() {\n    this.preventHide = true;\n  }\n  destroy() {\n    this.options.element.removeEventListener('mousedown', this.mousedownHandler);\n    this.options.editor.off('blur', this.blurHandler);\n  }\n}\nfunction MenuBar(options) {\n  return new Plugin({\n    key: new PluginKey('menu_bar'),\n    view(editorView) {\n      return new Menu({\n        editorView,\n        options\n      });\n    }\n  });\n}\nvar EditorMenuBar = {\n  props: {\n    editor: {\n      default: null,\n      type: Object\n    }\n  },\n  data() {\n    return {\n      focused: false\n    };\n  },\n  watch: {\n    editor: {\n      immediate: true,\n      handler(editor) {\n        if (editor) {\n          this.$nextTick(() => {\n            editor.registerPlugin(MenuBar({\n              editor,\n              element: this.$el\n            }));\n            this.focused = editor.focused;\n            editor.on('focus', () => {\n              this.focused = true;\n            });\n            editor.on('menubar:focusUpdate', focused => {\n              this.focused = focused;\n            });\n          });\n        }\n      }\n    }\n  },\n  render() {\n    if (!this.editor) {\n      return null;\n    }\n    return this.$scopedSlots.default({\n      focused: this.focused,\n      focus: this.editor.focus,\n      commands: this.editor.commands,\n      isActive: this.editor.isActive,\n      getMarkAttrs: this.editor.getMarkAttrs.bind(this.editor),\n      getNodeAttrs: this.editor.getNodeAttrs.bind(this.editor)\n    });\n  }\n};\nfunction textRange(node, from, to) {\n  const range = document.createRange();\n  range.setEnd(node, to == null ? node.nodeValue.length : to);\n  range.setStart(node, Math.max(from, 0));\n  return range;\n}\nfunction singleRect(object, bias) {\n  const rects = object.getClientRects();\n  return !rects.length ? object.getBoundingClientRect() : rects[bias < 0 ? 0 : rects.length - 1];\n}\nfunction coordsAtPos(view, pos) {\n  let end = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  const {\n    node,\n    offset\n  } = view.docView.domFromPos(pos);\n  let side;\n  let rect;\n  if (node.nodeType === 3) {\n    if (end && offset < node.nodeValue.length) {\n      rect = singleRect(textRange(node, offset - 1, offset), -1);\n      side = 'right';\n    } else if (offset < node.nodeValue.length) {\n      rect = singleRect(textRange(node, offset, offset + 1), -1);\n      side = 'left';\n    }\n  } else if (node.firstChild) {\n    if (offset < node.childNodes.length) {\n      const child = node.childNodes[offset];\n      rect = singleRect(child.nodeType === 3 ? textRange(child) : child, -1);\n      side = 'left';\n    }\n    if ((!rect || rect.top === rect.bottom) && offset) {\n      const child = node.childNodes[offset - 1];\n      rect = singleRect(child.nodeType === 3 ? textRange(child) : child, 1);\n      side = 'right';\n    }\n  } else {\n    rect = node.getBoundingClientRect();\n    side = 'left';\n  }\n  const x = rect[side];\n  return {\n    top: rect.top,\n    bottom: rect.bottom,\n    left: x,\n    right: x\n  };\n}\nclass Menu$1 {\n  constructor(_ref18) {\n    let {\n      options,\n      editorView\n    } = _ref18;\n    this.options = {\n      ...{\n        element: null,\n        keepInBounds: true,\n        onUpdate: () => false\n      },\n      ...options\n    };\n    this.editorView = editorView;\n    this.isActive = false;\n    this.left = 0;\n    this.bottom = 0;\n    this.top = 0;\n    this.preventHide = false; // the mousedown event is fired before blur so we can prevent it\n\n    this.mousedownHandler = this.handleClick.bind(this);\n    this.options.element.addEventListener('mousedown', this.mousedownHandler, {\n      capture: true\n    });\n    this.focusHandler = _ref19 => {\n      let {\n        view\n      } = _ref19;\n      this.update(view);\n    };\n    this.options.editor.on('focus', this.focusHandler);\n    this.blurHandler = _ref20 => {\n      let {\n        event\n      } = _ref20;\n      if (this.preventHide) {\n        this.preventHide = false;\n        return;\n      }\n      this.hide(event);\n    };\n    this.options.editor.on('blur', this.blurHandler);\n  }\n  handleClick() {\n    this.preventHide = true;\n  }\n  update(view, lastState) {\n    const {\n      state\n    } = view;\n    if (view.composing) {\n      return;\n    } // Don't do anything if the document/selection didn't change\n\n    if (lastState && lastState.doc.eq(state.doc) && lastState.selection.eq(state.selection)) {\n      return;\n    } // Hide the tooltip if the selection is empty\n\n    if (state.selection.empty) {\n      this.hide();\n      return;\n    } // Otherwise, reposition it and update its content\n\n    const {\n      from,\n      to\n    } = state.selection; // These are in screen coordinates\n    // We can't use EditorView.cordsAtPos here because it can't handle linebreaks correctly\n    // See: https://github.com/ProseMirror/prosemirror-view/pull/47\n\n    const start = coordsAtPos(view, from);\n    const end = coordsAtPos(view, to, true); // The box in which the tooltip is positioned, to use as base\n\n    const parent = this.options.element.offsetParent;\n    if (!parent) {\n      this.hide();\n      return;\n    }\n    const box = parent.getBoundingClientRect();\n    const el = this.options.element.getBoundingClientRect(); // Find a center-ish x position from the selection endpoints (when\n    // crossing lines, end may be more to the left)\n\n    const left = (start.left + end.left) / 2 - box.left; // Keep the menuBubble in the bounding box of the offsetParent i\n\n    this.left = Math.round(this.options.keepInBounds ? Math.min(box.width - el.width / 2, Math.max(left, el.width / 2)) : left);\n    this.bottom = Math.round(box.bottom - start.top);\n    this.top = Math.round(end.bottom - box.top);\n    this.isActive = true;\n    this.sendUpdate();\n  }\n  sendUpdate() {\n    this.options.onUpdate({\n      isActive: this.isActive,\n      left: this.left,\n      bottom: this.bottom,\n      top: this.top\n    });\n  }\n  hide(event) {\n    if (event && event.relatedTarget && this.options.element.parentNode && this.options.element.parentNode.contains(event.relatedTarget)) {\n      return;\n    }\n    this.isActive = false;\n    this.sendUpdate();\n  }\n  destroy() {\n    this.options.element.removeEventListener('mousedown', this.mousedownHandler);\n    this.options.editor.off('focus', this.focusHandler);\n    this.options.editor.off('blur', this.blurHandler);\n  }\n}\nfunction MenuBubble(options) {\n  return new Plugin({\n    key: new PluginKey('menu_bubble'),\n    view(editorView) {\n      return new Menu$1({\n        editorView,\n        options\n      });\n    }\n  });\n}\nvar EditorMenuBubble = {\n  props: {\n    editor: {\n      default: null,\n      type: Object\n    },\n    keepInBounds: {\n      default: true,\n      type: Boolean\n    }\n  },\n  data() {\n    return {\n      menu: {\n        isActive: false,\n        left: 0,\n        bottom: 0\n      }\n    };\n  },\n  watch: {\n    editor: {\n      immediate: true,\n      handler(editor) {\n        if (editor) {\n          this.$nextTick(() => {\n            editor.registerPlugin(MenuBubble({\n              editor,\n              element: this.$el,\n              keepInBounds: this.keepInBounds,\n              onUpdate: menu => {\n                // the second check ensures event is fired only once\n                if (menu.isActive && this.menu.isActive === false) {\n                  this.$emit('show', menu);\n                } else if (!menu.isActive && this.menu.isActive === true) {\n                  this.$emit('hide', menu);\n                }\n                this.menu = menu;\n              }\n            }));\n          });\n        }\n      }\n    }\n  },\n  render() {\n    if (!this.editor) {\n      return null;\n    }\n    return this.$scopedSlots.default({\n      focused: this.editor.view.focused,\n      focus: this.editor.focus,\n      commands: this.editor.commands,\n      isActive: this.editor.isActive,\n      getMarkAttrs: this.editor.getMarkAttrs.bind(this.editor),\n      getNodeAttrs: this.editor.getNodeAttrs.bind(this.editor),\n      menu: this.menu\n    });\n  },\n  beforeDestroy() {\n    this.editor.unregisterPlugin('menu_bubble');\n  }\n};\nclass Menu$2 {\n  constructor(_ref21) {\n    let {\n      options,\n      editorView\n    } = _ref21;\n    this.options = {\n      ...{\n        resizeObserver: true,\n        element: null,\n        onUpdate: () => false\n      },\n      ...options\n    };\n    this.preventHide = false;\n    this.editorView = editorView;\n    this.isActive = false;\n    this.top = 0; // the mousedown event is fired before blur so we can prevent it\n\n    this.mousedownHandler = this.handleClick.bind(this);\n    this.options.element.addEventListener('mousedown', this.mousedownHandler, {\n      capture: true\n    });\n    this.focusHandler = _ref22 => {\n      let {\n        view\n      } = _ref22;\n      this.update(view);\n    };\n    this.options.editor.on('focus', this.focusHandler);\n    this.blurHandler = _ref23 => {\n      let {\n        event\n      } = _ref23;\n      if (this.preventHide) {\n        this.preventHide = false;\n        return;\n      }\n      this.hide(event);\n    };\n    this.options.editor.on('blur', this.blurHandler); // sometimes we have to update the position\n    // because of a loaded images for example\n\n    if (this.options.resizeObserver && window.ResizeObserver) {\n      this.resizeObserver = new ResizeObserver(() => {\n        if (this.isActive) {\n          this.update(this.editorView);\n        }\n      });\n      this.resizeObserver.observe(this.editorView.dom);\n    }\n  }\n  handleClick() {\n    this.preventHide = true;\n  }\n  update(view, lastState) {\n    const {\n      state\n    } = view; // Don't do anything if the document/selection didn't change\n\n    if (lastState && lastState.doc.eq(state.doc) && lastState.selection.eq(state.selection)) {\n      return;\n    }\n    if (!state.selection.empty) {\n      this.hide();\n      return;\n    }\n    const currentDom = view.domAtPos(state.selection.anchor);\n    const isActive = currentDom.node.innerHTML === '<br>' && currentDom.node.tagName === 'P' && currentDom.node.parentNode === view.dom;\n    if (!isActive) {\n      this.hide();\n      return;\n    }\n    const parent = this.options.element.offsetParent;\n    if (!parent) {\n      this.hide();\n      return;\n    }\n    const editorBoundings = parent.getBoundingClientRect();\n    const cursorBoundings = view.coordsAtPos(state.selection.anchor);\n    const top = cursorBoundings.top - editorBoundings.top;\n    this.isActive = true;\n    this.top = top;\n    this.sendUpdate();\n  }\n  sendUpdate() {\n    this.options.onUpdate({\n      isActive: this.isActive,\n      top: this.top\n    });\n  }\n  hide(event) {\n    if (event && event.relatedTarget && this.options.element.parentNode && this.options.element.parentNode.contains(event.relatedTarget)) {\n      return;\n    }\n    this.isActive = false;\n    this.sendUpdate();\n  }\n  destroy() {\n    this.options.element.removeEventListener('mousedown', this.mousedownHandler);\n    if (this.resizeObserver) {\n      this.resizeObserver.unobserve(this.editorView.dom);\n    }\n    this.options.editor.off('focus', this.focusHandler);\n    this.options.editor.off('blur', this.blurHandler);\n  }\n}\nfunction FloatingMenu(options) {\n  return new Plugin({\n    key: new PluginKey('floating_menu'),\n    view(editorView) {\n      return new Menu$2({\n        editorView,\n        options\n      });\n    }\n  });\n}\nvar EditorFloatingMenu = {\n  props: {\n    editor: {\n      default: null,\n      type: Object\n    }\n  },\n  data() {\n    return {\n      menu: {\n        isActive: false,\n        left: 0,\n        bottom: 0\n      }\n    };\n  },\n  watch: {\n    editor: {\n      immediate: true,\n      handler(editor) {\n        if (editor) {\n          this.$nextTick(() => {\n            editor.registerPlugin(FloatingMenu({\n              editor,\n              element: this.$el,\n              onUpdate: menu => {\n                // the second check ensures event is fired only once\n                if (menu.isActive && this.menu.isActive === false) {\n                  this.$emit('show', menu);\n                } else if (!menu.isActive && this.menu.isActive === true) {\n                  this.$emit('hide', menu);\n                }\n                this.menu = menu;\n              }\n            }));\n          });\n        }\n      }\n    }\n  },\n  render() {\n    if (!this.editor) {\n      return null;\n    }\n    return this.$scopedSlots.default({\n      focused: this.editor.view.focused,\n      focus: this.editor.focus,\n      commands: this.editor.commands,\n      isActive: this.editor.isActive,\n      getMarkAttrs: this.editor.getMarkAttrs.bind(this.editor),\n      getNodeAttrs: this.editor.getNodeAttrs.bind(this.editor),\n      menu: this.menu\n    });\n  },\n  beforeDestroy() {\n    this.editor.unregisterPlugin('floating_menu');\n  }\n};\nexport { Doc, Editor, EditorContent, EditorFloatingMenu, EditorMenuBar, EditorMenuBubble, Extension, Mark, Node, Paragraph, Text };","map":{"version":3,"names":["EditorState","Plugin","PluginKey","TextSelection","NodeSelection","EditorView","Schema","DOMParser","DOMSerializer","dropCursor","gapCursor","keymap","baseKeymap","inputRules","undoInputRule","getMarkRange","markIsActive","getMarkAttrs","nodeIsActive","getNodeAttrs","Vue","setBlockType","camelCase","str","replace","word","index","toLowerCase","toUpperCase","ComponentView","constructor","component","_ref","editor","extension","parent","node","view","decorations","getPos","isNode","marks","isMark","getMarkPos","captureEvents","dom","createDOM","contentDOM","vm","$refs","content","Component","extend","props","selected","options","updateAttrs","attrs","setSelection","update","propsData","$mount","$el","type","updateComponentProps","_props","originalSilent","config","silent","Object","entries","forEach","_ref2","key","value","editable","state","pos","newAttrs","transaction","tr","removeMark","from","to","addMark","create","setNodeMarkup","dispatch","ignoreMutation","mutation","contains","target","stopEvent","event","draggable","schema","dragHandle","closest","isValidDragHandle","document","addEventListener","once","isCopy","isPaste","isCut","isDrag","startsWith","selectNode","deselectNode","posAtDOM","resolvedPos","doc","resolve","range","destroy","$destroy","Emitter","on","fn","_callbacks","push","emit","_len","arguments","length","args","Array","_key","callbacks","callback","apply","off","filter","cb","Extension","undefined","defaultOptions","init","bindEditor","name","plugins","pasteRules","keys","ExtensionManager","extensions","nodes","reduce","_ref3","Proxy","set","obj","prop","changed","assign","updateState","_ref4","allPlugins","_ref5","keymaps","_ref6","extensionKeymaps","includes","map","nodeMarkKeymaps","_ref7","excludedExtensions","allowedExtensions","extensionInputRules","nodeMarkInputRules","allInputRules","_ref8","extensionPasteRules","nodeMarkPasteRules","allPasteRules","commands","_ref9","allCommands","focus","handle","_name","_value","isArray","_ref10","commandName","commandValue","injectCSS","css","process","env","NODE_ENV","style","createElement","textContent","head","firstChild","insertBefore","appendChild","Mark","command","minMax","min","max","Math","parseInt","Node","Doc","Paragraph","group","parseDOM","tag","toDOM","_ref11","Text","Editor","editorProps","autoFocus","topNode","emptyDocument","useBuiltInExtensions","disableInputRules","disablePasteRules","enableDropCursor","enableGapCursor","parseOptions","onInit","onTransaction","onUpdate","onFocus","onBlur","onPaste","onDrop","events","setOptions","focused","selection","element","createExtensions","createNodes","createMarks","createSchema","createPlugins","createKeymaps","createInputRules","createPasteRules","createView","createCommands","setActiveNodesAndMarks","builtInExtensions","createState","createDocument","rules","Backspace","attributes","tabindex","handleDOMEvents","setMeta","blur","nodeFromJSON","error","console","warn","htmlString","parser","window","parseFromString","body","firstElementChild","fromSchema","parse","_this","handlePaste","_len2","_key2","handleDrop","_len3","_key3","dispatchTransaction","bind","setParentComponent","setProps","nodeViews","initNodeViews","_ref12","nodeView","newState","getHTML","getJSON","docChanged","getMeta","emitUpdate","resolveSelection","position","size","setTimeout","resolvedFrom","resolvedEnd","getSchemaJSON","JSON","stringify","div","fragment","serializeFragment","innerHTML","toJSON","setContent","replaceSelectionWith","clearContent","_this2","activeMarks","_ref13","mark","activeMarkAttrs","_ref14","activeNodes","_ref15","isActive","types","_ref16","registerPlugin","plugin","handlePlugins","reconfigure","unregisterPlugin","docView","EditorContent","default","watch","immediate","handler","$nextTick","render","beforeDestroy","Menu","_ref17","preventHide","mousedownHandler","handleClick","capture","blurHandler","removeEventListener","MenuBar","editorView","EditorMenuBar","data","$scopedSlots","textRange","createRange","setEnd","nodeValue","setStart","singleRect","object","bias","rects","getClientRects","getBoundingClientRect","coordsAtPos","end","offset","domFromPos","side","rect","nodeType","childNodes","child","top","bottom","x","left","right","Menu$1","_ref18","keepInBounds","focusHandler","_ref19","_ref20","hide","lastState","composing","eq","empty","start","offsetParent","box","el","round","width","sendUpdate","relatedTarget","parentNode","MenuBubble","EditorMenuBubble","Boolean","menu","$emit","Menu$2","_ref21","resizeObserver","_ref22","_ref23","ResizeObserver","observe","currentDom","domAtPos","anchor","tagName","editorBoundings","cursorBoundings","unobserve","FloatingMenu","EditorFloatingMenu"],"sources":["/Users/xander/go/hexon/frontend/node_modules/tiptap/dist/tiptap.esm.js"],"sourcesContent":["\n    /*!\n    * tiptap v1.32.1\n    * (c) 2021 Ã¼berdosis GbR (limited liability)\n    * @license MIT\n    */\n  \nimport { EditorState, Plugin, PluginKey, TextSelection } from 'prosemirror-state';\nexport { NodeSelection, Plugin, PluginKey, TextSelection } from 'prosemirror-state';\nimport { EditorView } from 'prosemirror-view';\nimport { Schema, DOMParser, DOMSerializer } from 'prosemirror-model';\nimport { dropCursor } from 'prosemirror-dropcursor';\nimport { gapCursor } from 'prosemirror-gapcursor';\nimport { keymap } from 'prosemirror-keymap';\nimport { baseKeymap } from 'prosemirror-commands';\nimport { inputRules, undoInputRule } from 'prosemirror-inputrules';\nimport { getMarkRange, markIsActive, getMarkAttrs, nodeIsActive, getNodeAttrs } from 'tiptap-utils';\nimport Vue from 'vue';\nimport { setBlockType } from 'tiptap-commands';\n\nfunction camelCase (str) {\n  return str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, (word, index) => index === 0 ? word.toLowerCase() : word.toUpperCase()).replace(/\\s+/g, '');\n}\n\nclass ComponentView {\n  constructor(component, {\n    editor,\n    extension,\n    parent,\n    node,\n    view,\n    decorations,\n    getPos\n  }) {\n    this.component = component;\n    this.editor = editor;\n    this.extension = extension;\n    this.parent = parent;\n    this.node = node;\n    this.view = view;\n    this.decorations = decorations;\n    this.isNode = !!this.node.marks;\n    this.isMark = !this.isNode;\n    this.getPos = this.isMark ? this.getMarkPos : getPos;\n    this.captureEvents = true;\n    this.dom = this.createDOM();\n    this.contentDOM = this.vm.$refs.content;\n  }\n\n  createDOM() {\n    const Component = Vue.extend(this.component);\n    const props = {\n      editor: this.editor,\n      node: this.node,\n      view: this.view,\n      getPos: () => this.getPos(),\n      decorations: this.decorations,\n      selected: false,\n      options: this.extension.options,\n      updateAttrs: attrs => this.updateAttrs(attrs)\n    };\n\n    if (typeof this.extension.setSelection === 'function') {\n      this.setSelection = this.extension.setSelection;\n    }\n\n    if (typeof this.extension.update === 'function') {\n      this.update = this.extension.update;\n    }\n\n    this.vm = new Component({\n      parent: this.parent,\n      propsData: props\n    }).$mount();\n    return this.vm.$el;\n  }\n\n  update(node, decorations) {\n    if (node.type !== this.node.type) {\n      return false;\n    }\n\n    if (node === this.node && this.decorations === decorations) {\n      return true;\n    }\n\n    this.node = node;\n    this.decorations = decorations;\n    this.updateComponentProps({\n      node,\n      decorations\n    });\n    return true;\n  }\n\n  updateComponentProps(props) {\n    if (!this.vm._props) {\n      return;\n    } // Update props in component\n    // TODO: Avoid mutating a prop directly.\n    // Maybe there is a better way to do this?\n\n\n    const originalSilent = Vue.config.silent;\n    Vue.config.silent = true;\n    Object.entries(props).forEach(([key, value]) => {\n      this.vm._props[key] = value;\n    }); // this.vm._props.node = node\n    // this.vm._props.decorations = decorations\n\n    Vue.config.silent = originalSilent;\n  }\n\n  updateAttrs(attrs) {\n    if (!this.view.editable) {\n      return;\n    }\n\n    const {\n      state\n    } = this.view;\n    const {\n      type\n    } = this.node;\n    const pos = this.getPos();\n    const newAttrs = { ...this.node.attrs,\n      ...attrs\n    };\n    const transaction = this.isMark ? state.tr.removeMark(pos.from, pos.to, type).addMark(pos.from, pos.to, type.create(newAttrs)) : state.tr.setNodeMarkup(pos, null, newAttrs);\n    this.view.dispatch(transaction);\n  } // prevent a full re-render of the vue component on update\n  // we'll handle prop updates in `update()`\n\n\n  ignoreMutation(mutation) {\n    // allow leaf nodes to be selected\n    if (mutation.type === 'selection') {\n      return false;\n    }\n\n    if (!this.contentDOM) {\n      return true;\n    }\n\n    return !this.contentDOM.contains(mutation.target);\n  } // disable (almost) all prosemirror event listener for node views\n\n\n  stopEvent(event) {\n    if (typeof this.extension.stopEvent === 'function') {\n      return this.extension.stopEvent(event);\n    }\n\n    const draggable = !!this.extension.schema.draggable; // support a custom drag handle\n\n    if (draggable && event.type === 'mousedown') {\n      const dragHandle = event.target.closest && event.target.closest('[data-drag-handle]');\n      const isValidDragHandle = dragHandle && (this.dom === dragHandle || this.dom.contains(dragHandle));\n\n      if (isValidDragHandle) {\n        this.captureEvents = false;\n        document.addEventListener('dragend', () => {\n          this.captureEvents = true;\n        }, {\n          once: true\n        });\n      }\n    }\n\n    const isCopy = event.type === 'copy';\n    const isPaste = event.type === 'paste';\n    const isCut = event.type === 'cut';\n    const isDrag = event.type.startsWith('drag') || event.type === 'drop';\n\n    if (draggable && isDrag || isCopy || isPaste || isCut) {\n      return false;\n    }\n\n    return this.captureEvents;\n  }\n\n  selectNode() {\n    this.updateComponentProps({\n      selected: true\n    });\n  }\n\n  deselectNode() {\n    this.updateComponentProps({\n      selected: false\n    });\n  }\n\n  getMarkPos() {\n    const pos = this.view.posAtDOM(this.dom);\n    const resolvedPos = this.view.state.doc.resolve(pos);\n    const range = getMarkRange(resolvedPos, this.node.type);\n    return range;\n  }\n\n  destroy() {\n    this.vm.$destroy();\n  }\n\n}\n\nclass Emitter {\n  // Add an event listener for given event\n  on(event, fn) {\n    this._callbacks = this._callbacks || {}; // Create namespace for this event\n\n    if (!this._callbacks[event]) {\n      this._callbacks[event] = [];\n    }\n\n    this._callbacks[event].push(fn);\n\n    return this;\n  }\n\n  emit(event, ...args) {\n    this._callbacks = this._callbacks || {};\n    const callbacks = this._callbacks[event];\n\n    if (callbacks) {\n      callbacks.forEach(callback => callback.apply(this, args));\n    }\n\n    return this;\n  } // Remove event listener for given event.\n  // If fn is not provided, all event listeners for that event will be removed.\n  // If neither is provided, all event listeners will be removed.\n\n\n  off(event, fn) {\n    if (!arguments.length) {\n      this._callbacks = {};\n    } else {\n      // event listeners for the given event\n      const callbacks = this._callbacks ? this._callbacks[event] : null;\n\n      if (callbacks) {\n        if (fn) {\n          this._callbacks[event] = callbacks.filter(cb => cb !== fn); // remove specific handler\n        } else {\n          delete this._callbacks[event]; // remove all handlers\n        }\n      }\n    }\n\n    return this;\n  }\n\n}\n\nclass Extension {\n  constructor(options = {}) {\n    this.options = { ...this.defaultOptions,\n      ...options\n    };\n  }\n\n  init() {\n    return null;\n  }\n\n  bindEditor(editor = null) {\n    this.editor = editor;\n  }\n\n  get name() {\n    return null;\n  }\n\n  get type() {\n    return 'extension';\n  }\n\n  get defaultOptions() {\n    return {};\n  }\n\n  get plugins() {\n    return [];\n  }\n\n  inputRules() {\n    return [];\n  }\n\n  pasteRules() {\n    return [];\n  }\n\n  keys() {\n    return {};\n  }\n\n}\n\nclass ExtensionManager {\n  constructor(extensions = [], editor) {\n    extensions.forEach(extension => {\n      extension.bindEditor(editor);\n      extension.init();\n    });\n    this.extensions = extensions;\n  }\n\n  get nodes() {\n    return this.extensions.filter(extension => extension.type === 'node').reduce((nodes, {\n      name,\n      schema\n    }) => ({ ...nodes,\n      [name]: schema\n    }), {});\n  }\n\n  get options() {\n    const {\n      view\n    } = this;\n    return this.extensions.reduce((nodes, extension) => ({ ...nodes,\n      [extension.name]: new Proxy(extension.options, {\n        set(obj, prop, value) {\n          const changed = obj[prop] !== value;\n          Object.assign(obj, {\n            [prop]: value\n          });\n\n          if (changed) {\n            view.updateState(view.state);\n          }\n\n          return true;\n        }\n\n      })\n    }), {});\n  }\n\n  get marks() {\n    return this.extensions.filter(extension => extension.type === 'mark').reduce((marks, {\n      name,\n      schema\n    }) => ({ ...marks,\n      [name]: schema\n    }), {});\n  }\n\n  get plugins() {\n    return this.extensions.filter(extension => extension.plugins).reduce((allPlugins, {\n      plugins\n    }) => [...allPlugins, ...plugins], []);\n  }\n\n  keymaps({\n    schema\n  }) {\n    const extensionKeymaps = this.extensions.filter(extension => ['extension'].includes(extension.type)).filter(extension => extension.keys).map(extension => extension.keys({\n      schema\n    }));\n    const nodeMarkKeymaps = this.extensions.filter(extension => ['node', 'mark'].includes(extension.type)).filter(extension => extension.keys).map(extension => extension.keys({\n      type: schema[`${extension.type}s`][extension.name],\n      schema\n    }));\n    return [...extensionKeymaps, ...nodeMarkKeymaps].map(keys => keymap(keys));\n  }\n\n  inputRules({\n    schema,\n    excludedExtensions\n  }) {\n    if (!(excludedExtensions instanceof Array) && excludedExtensions) return [];\n    const allowedExtensions = excludedExtensions instanceof Array ? this.extensions.filter(extension => !excludedExtensions.includes(extension.name)) : this.extensions;\n    const extensionInputRules = allowedExtensions.filter(extension => ['extension'].includes(extension.type)).filter(extension => extension.inputRules).map(extension => extension.inputRules({\n      schema\n    }));\n    const nodeMarkInputRules = allowedExtensions.filter(extension => ['node', 'mark'].includes(extension.type)).filter(extension => extension.inputRules).map(extension => extension.inputRules({\n      type: schema[`${extension.type}s`][extension.name],\n      schema\n    }));\n    return [...extensionInputRules, ...nodeMarkInputRules].reduce((allInputRules, inputRules) => [...allInputRules, ...inputRules], []);\n  }\n\n  pasteRules({\n    schema,\n    excludedExtensions\n  }) {\n    if (!(excludedExtensions instanceof Array) && excludedExtensions) return [];\n    const allowedExtensions = excludedExtensions instanceof Array ? this.extensions.filter(extension => !excludedExtensions.includes(extension.name)) : this.extensions;\n    const extensionPasteRules = allowedExtensions.filter(extension => ['extension'].includes(extension.type)).filter(extension => extension.pasteRules).map(extension => extension.pasteRules({\n      schema\n    }));\n    const nodeMarkPasteRules = allowedExtensions.filter(extension => ['node', 'mark'].includes(extension.type)).filter(extension => extension.pasteRules).map(extension => extension.pasteRules({\n      type: schema[`${extension.type}s`][extension.name],\n      schema\n    }));\n    return [...extensionPasteRules, ...nodeMarkPasteRules].reduce((allPasteRules, pasteRules) => [...allPasteRules, ...pasteRules], []);\n  }\n\n  commands({\n    schema,\n    view\n  }) {\n    return this.extensions.filter(extension => extension.commands).reduce((allCommands, extension) => {\n      const {\n        name,\n        type\n      } = extension;\n      const commands = {};\n      const value = extension.commands({\n        schema,\n        ...(['node', 'mark'].includes(type) ? {\n          type: schema[`${type}s`][name]\n        } : {})\n      });\n\n      const apply = (cb, attrs) => {\n        if (!view.editable) {\n          return false;\n        }\n\n        view.focus();\n        return cb(attrs)(view.state, view.dispatch, view);\n      };\n\n      const handle = (_name, _value) => {\n        if (Array.isArray(_value)) {\n          commands[_name] = attrs => _value.forEach(callback => apply(callback, attrs));\n        } else if (typeof _value === 'function') {\n          commands[_name] = attrs => apply(_value, attrs);\n        }\n      };\n\n      if (typeof value === 'object') {\n        Object.entries(value).forEach(([commandName, commandValue]) => {\n          handle(commandName, commandValue);\n        });\n      } else {\n        handle(name, value);\n      }\n\n      return { ...allCommands,\n        ...commands\n      };\n    }, {});\n  }\n\n}\n\nfunction injectCSS (css) {\n  if (process.env.NODE_ENV !== 'test') {\n    const style = document.createElement('style');\n    style.type = 'text/css';\n    style.textContent = css;\n    const {\n      head\n    } = document;\n    const {\n      firstChild\n    } = head;\n\n    if (firstChild) {\n      head.insertBefore(style, firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  }\n}\n\nclass Mark extends Extension {\n  constructor(options = {}) {\n    super(options);\n  }\n\n  get type() {\n    return 'mark';\n  }\n\n  get view() {\n    return null;\n  }\n\n  get schema() {\n    return null;\n  }\n\n  command() {\n    return () => {};\n  }\n\n}\n\nfunction minMax(value = 0, min = 0, max = 0) {\n  return Math.min(Math.max(parseInt(value, 10), min), max);\n}\n\nclass Node extends Extension {\n  constructor(options = {}) {\n    super(options);\n  }\n\n  get type() {\n    return 'node';\n  }\n\n  get view() {\n    return null;\n  }\n\n  get schema() {\n    return null;\n  }\n\n  command() {\n    return () => {};\n  }\n\n}\n\nclass Doc extends Node {\n  get name() {\n    return 'doc';\n  }\n\n  get schema() {\n    return {\n      content: 'block+'\n    };\n  }\n\n}\n\nclass Paragraph extends Node {\n  get name() {\n    return 'paragraph';\n  }\n\n  get schema() {\n    return {\n      content: 'inline*',\n      group: 'block',\n      draggable: false,\n      parseDOM: [{\n        tag: 'p'\n      }],\n      toDOM: () => ['p', 0]\n    };\n  }\n\n  commands({\n    type\n  }) {\n    return () => setBlockType(type);\n  }\n\n}\n\nclass Text extends Node {\n  get name() {\n    return 'text';\n  }\n\n  get schema() {\n    return {\n      group: 'inline'\n    };\n  }\n\n}\n\nvar css = \".ProseMirror {\\n  position: relative;\\n}\\n\\n.ProseMirror {\\n  word-wrap: break-word;\\n  white-space: pre-wrap;\\n  -webkit-font-variant-ligatures: none;\\n  font-variant-ligatures: none;\\n}\\n\\n.ProseMirror pre {\\n  white-space: pre-wrap;\\n}\\n\\n.ProseMirror-gapcursor {\\n  display: none;\\n  pointer-events: none;\\n  position: absolute;\\n}\\n\\n.ProseMirror-gapcursor:after {\\n  content: \\\"\\\";\\n  display: block;\\n  position: absolute;\\n  top: -2px;\\n  width: 20px;\\n  border-top: 1px solid black;\\n  animation: ProseMirror-cursor-blink 1.1s steps(2, start) infinite;\\n}\\n\\n@keyframes ProseMirror-cursor-blink {\\n  to {\\n    visibility: hidden;\\n  }\\n}\\n\\n.ProseMirror-hideselection *::selection {\\n  background: transparent;\\n}\\n\\n.ProseMirror-hideselection *::-moz-selection {\\n  background: transparent;\\n}\\n\\n.ProseMirror-hideselection * {\\n  caret-color: transparent;\\n}\\n\\n.ProseMirror-focused .ProseMirror-gapcursor {\\n  display: block;\\n}\\n\";\n\nclass Editor extends Emitter {\n  constructor(options = {}) {\n    super();\n    this.defaultOptions = {\n      editorProps: {},\n      editable: true,\n      autoFocus: null,\n      extensions: [],\n      content: '',\n      topNode: 'doc',\n      emptyDocument: {\n        type: 'doc',\n        content: [{\n          type: 'paragraph'\n        }]\n      },\n      useBuiltInExtensions: true,\n      disableInputRules: false,\n      disablePasteRules: false,\n      dropCursor: {},\n      enableDropCursor: true,\n      enableGapCursor: true,\n      parseOptions: {},\n      injectCSS: true,\n      onInit: () => {},\n      onTransaction: () => {},\n      onUpdate: () => {},\n      onFocus: () => {},\n      onBlur: () => {},\n      onPaste: () => {},\n      onDrop: () => {}\n    };\n    this.events = ['init', 'transaction', 'update', 'focus', 'blur', 'paste', 'drop'];\n    this.init(options);\n  }\n\n  init(options = {}) {\n    this.setOptions({ ...this.defaultOptions,\n      ...options\n    });\n    this.focused = false;\n    this.selection = {\n      from: 0,\n      to: 0\n    };\n    this.element = document.createElement('div');\n    this.extensions = this.createExtensions();\n    this.nodes = this.createNodes();\n    this.marks = this.createMarks();\n    this.schema = this.createSchema();\n    this.plugins = this.createPlugins();\n    this.keymaps = this.createKeymaps();\n    this.inputRules = this.createInputRules();\n    this.pasteRules = this.createPasteRules();\n    this.view = this.createView();\n    this.commands = this.createCommands();\n    this.setActiveNodesAndMarks();\n\n    if (this.options.injectCSS) {\n      injectCSS(css);\n    }\n\n    if (this.options.autoFocus !== null) {\n      this.focus(this.options.autoFocus);\n    }\n\n    this.events.forEach(name => {\n      this.on(name, this.options[camelCase(`on ${name}`)] || (() => {}));\n    });\n    this.emit('init', {\n      view: this.view,\n      state: this.state\n    }); // give extension manager access to our view\n\n    this.extensions.view = this.view;\n  }\n\n  setOptions(options) {\n    this.options = { ...this.options,\n      ...options\n    };\n\n    if (this.view && this.state) {\n      this.view.updateState(this.state);\n    }\n  }\n\n  get builtInExtensions() {\n    if (!this.options.useBuiltInExtensions) {\n      return [];\n    }\n\n    return [new Doc(), new Text(), new Paragraph()];\n  }\n\n  get state() {\n    return this.view ? this.view.state : null;\n  }\n\n  createExtensions() {\n    return new ExtensionManager([...this.builtInExtensions, ...this.options.extensions], this);\n  }\n\n  createPlugins() {\n    return this.extensions.plugins;\n  }\n\n  createKeymaps() {\n    return this.extensions.keymaps({\n      schema: this.schema\n    });\n  }\n\n  createInputRules() {\n    return this.extensions.inputRules({\n      schema: this.schema,\n      excludedExtensions: this.options.disableInputRules\n    });\n  }\n\n  createPasteRules() {\n    return this.extensions.pasteRules({\n      schema: this.schema,\n      excludedExtensions: this.options.disablePasteRules\n    });\n  }\n\n  createCommands() {\n    return this.extensions.commands({\n      schema: this.schema,\n      view: this.view\n    });\n  }\n\n  createNodes() {\n    return this.extensions.nodes;\n  }\n\n  createMarks() {\n    return this.extensions.marks;\n  }\n\n  createSchema() {\n    return new Schema({\n      topNode: this.options.topNode,\n      nodes: this.nodes,\n      marks: this.marks\n    });\n  }\n\n  createState() {\n    return EditorState.create({\n      schema: this.schema,\n      doc: this.createDocument(this.options.content),\n      plugins: [...this.plugins, inputRules({\n        rules: this.inputRules\n      }), ...this.pasteRules, ...this.keymaps, keymap({\n        Backspace: undoInputRule\n      }), keymap(baseKeymap), ...(this.options.enableDropCursor ? [dropCursor(this.options.dropCursor)] : []), ...(this.options.enableGapCursor ? [gapCursor()] : []), new Plugin({\n        key: new PluginKey('editable'),\n        props: {\n          editable: () => this.options.editable\n        }\n      }), new Plugin({\n        props: {\n          attributes: {\n            tabindex: 0\n          },\n          handleDOMEvents: {\n            focus: (view, event) => {\n              this.focused = true;\n              this.emit('focus', {\n                event,\n                state: view.state,\n                view\n              });\n              const transaction = this.state.tr.setMeta('focused', true);\n              this.view.dispatch(transaction);\n            },\n            blur: (view, event) => {\n              this.focused = false;\n              this.emit('blur', {\n                event,\n                state: view.state,\n                view\n              });\n              const transaction = this.state.tr.setMeta('focused', false);\n              this.view.dispatch(transaction);\n            }\n          }\n        }\n      }), new Plugin({\n        props: this.options.editorProps\n      })]\n    });\n  }\n\n  createDocument(content, parseOptions = this.options.parseOptions) {\n    if (content === null) {\n      return this.schema.nodeFromJSON(this.options.emptyDocument);\n    }\n\n    if (typeof content === 'object') {\n      try {\n        return this.schema.nodeFromJSON(content);\n      } catch (error) {\n        console.warn('[tiptap warn]: Invalid content.', 'Passed value:', content, 'Error:', error);\n        return this.schema.nodeFromJSON(this.options.emptyDocument);\n      }\n    }\n\n    if (typeof content === 'string') {\n      const htmlString = `<div>${content}</div>`;\n      const parser = new window.DOMParser();\n      const element = parser.parseFromString(htmlString, 'text/html').body.firstElementChild;\n      return DOMParser.fromSchema(this.schema).parse(element, parseOptions);\n    }\n\n    return false;\n  }\n\n  createView() {\n    return new EditorView(this.element, {\n      state: this.createState(),\n      handlePaste: (...args) => {\n        this.emit('paste', ...args);\n      },\n      handleDrop: (...args) => {\n        this.emit('drop', ...args);\n      },\n      dispatchTransaction: this.dispatchTransaction.bind(this)\n    });\n  }\n\n  setParentComponent(component = null) {\n    if (!component) {\n      return;\n    }\n\n    this.view.setProps({\n      nodeViews: this.initNodeViews({\n        parent: component,\n        extensions: [...this.builtInExtensions, ...this.options.extensions]\n      })\n    });\n  }\n\n  initNodeViews({\n    parent,\n    extensions\n  }) {\n    return extensions.filter(extension => ['node', 'mark'].includes(extension.type)).filter(extension => extension.view).reduce((nodeViews, extension) => {\n      const nodeView = (node, view, getPos, decorations) => {\n        const component = extension.view;\n        return new ComponentView(component, {\n          editor: this,\n          extension,\n          parent,\n          node,\n          view,\n          getPos,\n          decorations\n        });\n      };\n\n      return { ...nodeViews,\n        [extension.name]: nodeView\n      };\n    }, {});\n  }\n\n  dispatchTransaction(transaction) {\n    const newState = this.state.apply(transaction);\n    this.view.updateState(newState);\n    this.selection = {\n      from: this.state.selection.from,\n      to: this.state.selection.to\n    };\n    this.setActiveNodesAndMarks();\n    this.emit('transaction', {\n      getHTML: this.getHTML.bind(this),\n      getJSON: this.getJSON.bind(this),\n      state: this.state,\n      transaction\n    });\n\n    if (!transaction.docChanged || transaction.getMeta('preventUpdate')) {\n      return;\n    }\n\n    this.emitUpdate(transaction);\n  }\n\n  emitUpdate(transaction) {\n    this.emit('update', {\n      getHTML: this.getHTML.bind(this),\n      getJSON: this.getJSON.bind(this),\n      state: this.state,\n      transaction\n    });\n  }\n\n  resolveSelection(position = null) {\n    if (this.selection && position === null) {\n      return this.selection;\n    }\n\n    if (position === 'start' || position === true) {\n      return {\n        from: 0,\n        to: 0\n      };\n    }\n\n    if (position === 'end') {\n      const {\n        doc\n      } = this.state;\n      return {\n        from: doc.content.size,\n        to: doc.content.size\n      };\n    }\n\n    return {\n      from: position,\n      to: position\n    };\n  }\n\n  focus(position = null) {\n    if (this.view.focused && position === null || position === false) {\n      return;\n    }\n\n    const {\n      from,\n      to\n    } = this.resolveSelection(position);\n    this.setSelection(from, to);\n    setTimeout(() => this.view.focus(), 10);\n  }\n\n  setSelection(from = 0, to = 0) {\n    const {\n      doc,\n      tr\n    } = this.state;\n    const resolvedFrom = minMax(from, 0, doc.content.size);\n    const resolvedEnd = minMax(to, 0, doc.content.size);\n    const selection = TextSelection.create(doc, resolvedFrom, resolvedEnd);\n    const transaction = tr.setSelection(selection);\n    this.view.dispatch(transaction);\n  }\n\n  blur() {\n    this.view.dom.blur();\n  }\n\n  getSchemaJSON() {\n    return JSON.parse(JSON.stringify({\n      nodes: this.extensions.nodes,\n      marks: this.extensions.marks\n    }));\n  }\n\n  getHTML() {\n    const div = document.createElement('div');\n    const fragment = DOMSerializer.fromSchema(this.schema).serializeFragment(this.state.doc.content);\n    div.appendChild(fragment);\n    return div.innerHTML;\n  }\n\n  getJSON() {\n    return this.state.doc.toJSON();\n  }\n\n  setContent(content = {}, emitUpdate = false, parseOptions) {\n    const {\n      doc,\n      tr\n    } = this.state;\n    const document = this.createDocument(content, parseOptions);\n    const selection = TextSelection.create(doc, 0, doc.content.size);\n    const transaction = tr.setSelection(selection).replaceSelectionWith(document, false).setMeta('preventUpdate', !emitUpdate);\n    this.view.dispatch(transaction);\n  }\n\n  clearContent(emitUpdate = false) {\n    this.setContent(this.options.emptyDocument, emitUpdate);\n  }\n\n  setActiveNodesAndMarks() {\n    this.activeMarks = Object.entries(this.schema.marks).reduce((marks, [name, mark]) => ({ ...marks,\n      [name]: (attrs = {}) => markIsActive(this.state, mark, attrs)\n    }), {});\n    this.activeMarkAttrs = Object.entries(this.schema.marks).reduce((marks, [name, mark]) => ({ ...marks,\n      [name]: getMarkAttrs(this.state, mark)\n    }), {});\n    this.activeNodes = Object.entries(this.schema.nodes).reduce((nodes, [name, node]) => ({ ...nodes,\n      [name]: (attrs = {}) => nodeIsActive(this.state, node, attrs)\n    }), {});\n  }\n\n  getMarkAttrs(type = null) {\n    return this.activeMarkAttrs[type];\n  }\n\n  getNodeAttrs(type = null) {\n    return { ...getNodeAttrs(this.state, this.schema.nodes[type])\n    };\n  }\n\n  get isActive() {\n    return Object.entries({ ...this.activeMarks,\n      ...this.activeNodes\n    }).reduce((types, [name, value]) => ({ ...types,\n      [name]: (attrs = {}) => value(attrs)\n    }), {});\n  }\n\n  registerPlugin(plugin = null, handlePlugins) {\n    const plugins = typeof handlePlugins === 'function' ? handlePlugins(plugin, this.state.plugins) : [plugin, ...this.state.plugins];\n    const newState = this.state.reconfigure({\n      plugins\n    });\n    this.view.updateState(newState);\n  }\n\n  unregisterPlugin(name = null) {\n    if (!name || !this.view.docView) {\n      return;\n    }\n\n    const newState = this.state.reconfigure({\n      plugins: this.state.plugins.filter(plugin => !plugin.key.startsWith(`${name}$`))\n    });\n    this.view.updateState(newState);\n  }\n\n  destroy() {\n    if (!this.view) {\n      return;\n    }\n\n    this.view.destroy();\n  }\n\n}\n\nvar EditorContent = {\n  props: {\n    editor: {\n      default: null,\n      type: Object\n    }\n  },\n  watch: {\n    editor: {\n      immediate: true,\n\n      handler(editor) {\n        if (editor && editor.element) {\n          this.$nextTick(() => {\n            this.$el.appendChild(editor.element.firstChild);\n            editor.setParentComponent(this);\n          });\n        }\n      }\n\n    }\n  },\n\n  render(createElement) {\n    return createElement('div');\n  },\n\n  beforeDestroy() {\n    this.editor.element = this.$el;\n  }\n\n};\n\nclass Menu {\n  constructor({\n    options\n  }) {\n    this.options = options;\n    this.preventHide = false; // the mousedown event is fired before blur so we can prevent it\n\n    this.mousedownHandler = this.handleClick.bind(this);\n    this.options.element.addEventListener('mousedown', this.mousedownHandler, {\n      capture: true\n    });\n\n    this.blurHandler = () => {\n      if (this.preventHide) {\n        this.preventHide = false;\n        return;\n      }\n\n      this.options.editor.emit('menubar:focusUpdate', false);\n    };\n\n    this.options.editor.on('blur', this.blurHandler);\n  }\n\n  handleClick() {\n    this.preventHide = true;\n  }\n\n  destroy() {\n    this.options.element.removeEventListener('mousedown', this.mousedownHandler);\n    this.options.editor.off('blur', this.blurHandler);\n  }\n\n}\n\nfunction MenuBar (options) {\n  return new Plugin({\n    key: new PluginKey('menu_bar'),\n\n    view(editorView) {\n      return new Menu({\n        editorView,\n        options\n      });\n    }\n\n  });\n}\n\nvar EditorMenuBar = {\n  props: {\n    editor: {\n      default: null,\n      type: Object\n    }\n  },\n\n  data() {\n    return {\n      focused: false\n    };\n  },\n\n  watch: {\n    editor: {\n      immediate: true,\n\n      handler(editor) {\n        if (editor) {\n          this.$nextTick(() => {\n            editor.registerPlugin(MenuBar({\n              editor,\n              element: this.$el\n            }));\n            this.focused = editor.focused;\n            editor.on('focus', () => {\n              this.focused = true;\n            });\n            editor.on('menubar:focusUpdate', focused => {\n              this.focused = focused;\n            });\n          });\n        }\n      }\n\n    }\n  },\n\n  render() {\n    if (!this.editor) {\n      return null;\n    }\n\n    return this.$scopedSlots.default({\n      focused: this.focused,\n      focus: this.editor.focus,\n      commands: this.editor.commands,\n      isActive: this.editor.isActive,\n      getMarkAttrs: this.editor.getMarkAttrs.bind(this.editor),\n      getNodeAttrs: this.editor.getNodeAttrs.bind(this.editor)\n    });\n  }\n\n};\n\nfunction textRange(node, from, to) {\n  const range = document.createRange();\n  range.setEnd(node, to == null ? node.nodeValue.length : to);\n  range.setStart(node, Math.max(from, 0));\n  return range;\n}\n\nfunction singleRect(object, bias) {\n  const rects = object.getClientRects();\n  return !rects.length ? object.getBoundingClientRect() : rects[bias < 0 ? 0 : rects.length - 1];\n}\n\nfunction coordsAtPos(view, pos, end = false) {\n  const {\n    node,\n    offset\n  } = view.docView.domFromPos(pos);\n  let side;\n  let rect;\n\n  if (node.nodeType === 3) {\n    if (end && offset < node.nodeValue.length) {\n      rect = singleRect(textRange(node, offset - 1, offset), -1);\n      side = 'right';\n    } else if (offset < node.nodeValue.length) {\n      rect = singleRect(textRange(node, offset, offset + 1), -1);\n      side = 'left';\n    }\n  } else if (node.firstChild) {\n    if (offset < node.childNodes.length) {\n      const child = node.childNodes[offset];\n      rect = singleRect(child.nodeType === 3 ? textRange(child) : child, -1);\n      side = 'left';\n    }\n\n    if ((!rect || rect.top === rect.bottom) && offset) {\n      const child = node.childNodes[offset - 1];\n      rect = singleRect(child.nodeType === 3 ? textRange(child) : child, 1);\n      side = 'right';\n    }\n  } else {\n    rect = node.getBoundingClientRect();\n    side = 'left';\n  }\n\n  const x = rect[side];\n  return {\n    top: rect.top,\n    bottom: rect.bottom,\n    left: x,\n    right: x\n  };\n}\n\nclass Menu$1 {\n  constructor({\n    options,\n    editorView\n  }) {\n    this.options = { ...{\n        element: null,\n        keepInBounds: true,\n        onUpdate: () => false\n      },\n      ...options\n    };\n    this.editorView = editorView;\n    this.isActive = false;\n    this.left = 0;\n    this.bottom = 0;\n    this.top = 0;\n    this.preventHide = false; // the mousedown event is fired before blur so we can prevent it\n\n    this.mousedownHandler = this.handleClick.bind(this);\n    this.options.element.addEventListener('mousedown', this.mousedownHandler, {\n      capture: true\n    });\n\n    this.focusHandler = ({\n      view\n    }) => {\n      this.update(view);\n    };\n\n    this.options.editor.on('focus', this.focusHandler);\n\n    this.blurHandler = ({\n      event\n    }) => {\n      if (this.preventHide) {\n        this.preventHide = false;\n        return;\n      }\n\n      this.hide(event);\n    };\n\n    this.options.editor.on('blur', this.blurHandler);\n  }\n\n  handleClick() {\n    this.preventHide = true;\n  }\n\n  update(view, lastState) {\n    const {\n      state\n    } = view;\n\n    if (view.composing) {\n      return;\n    } // Don't do anything if the document/selection didn't change\n\n\n    if (lastState && lastState.doc.eq(state.doc) && lastState.selection.eq(state.selection)) {\n      return;\n    } // Hide the tooltip if the selection is empty\n\n\n    if (state.selection.empty) {\n      this.hide();\n      return;\n    } // Otherwise, reposition it and update its content\n\n\n    const {\n      from,\n      to\n    } = state.selection; // These are in screen coordinates\n    // We can't use EditorView.cordsAtPos here because it can't handle linebreaks correctly\n    // See: https://github.com/ProseMirror/prosemirror-view/pull/47\n\n    const start = coordsAtPos(view, from);\n    const end = coordsAtPos(view, to, true); // The box in which the tooltip is positioned, to use as base\n\n    const parent = this.options.element.offsetParent;\n\n    if (!parent) {\n      this.hide();\n      return;\n    }\n\n    const box = parent.getBoundingClientRect();\n    const el = this.options.element.getBoundingClientRect(); // Find a center-ish x position from the selection endpoints (when\n    // crossing lines, end may be more to the left)\n\n    const left = (start.left + end.left) / 2 - box.left; // Keep the menuBubble in the bounding box of the offsetParent i\n\n    this.left = Math.round(this.options.keepInBounds ? Math.min(box.width - el.width / 2, Math.max(left, el.width / 2)) : left);\n    this.bottom = Math.round(box.bottom - start.top);\n    this.top = Math.round(end.bottom - box.top);\n    this.isActive = true;\n    this.sendUpdate();\n  }\n\n  sendUpdate() {\n    this.options.onUpdate({\n      isActive: this.isActive,\n      left: this.left,\n      bottom: this.bottom,\n      top: this.top\n    });\n  }\n\n  hide(event) {\n    if (event && event.relatedTarget && this.options.element.parentNode && this.options.element.parentNode.contains(event.relatedTarget)) {\n      return;\n    }\n\n    this.isActive = false;\n    this.sendUpdate();\n  }\n\n  destroy() {\n    this.options.element.removeEventListener('mousedown', this.mousedownHandler);\n    this.options.editor.off('focus', this.focusHandler);\n    this.options.editor.off('blur', this.blurHandler);\n  }\n\n}\n\nfunction MenuBubble (options) {\n  return new Plugin({\n    key: new PluginKey('menu_bubble'),\n\n    view(editorView) {\n      return new Menu$1({\n        editorView,\n        options\n      });\n    }\n\n  });\n}\n\nvar EditorMenuBubble = {\n  props: {\n    editor: {\n      default: null,\n      type: Object\n    },\n    keepInBounds: {\n      default: true,\n      type: Boolean\n    }\n  },\n\n  data() {\n    return {\n      menu: {\n        isActive: false,\n        left: 0,\n        bottom: 0\n      }\n    };\n  },\n\n  watch: {\n    editor: {\n      immediate: true,\n\n      handler(editor) {\n        if (editor) {\n          this.$nextTick(() => {\n            editor.registerPlugin(MenuBubble({\n              editor,\n              element: this.$el,\n              keepInBounds: this.keepInBounds,\n              onUpdate: menu => {\n                // the second check ensures event is fired only once\n                if (menu.isActive && this.menu.isActive === false) {\n                  this.$emit('show', menu);\n                } else if (!menu.isActive && this.menu.isActive === true) {\n                  this.$emit('hide', menu);\n                }\n\n                this.menu = menu;\n              }\n            }));\n          });\n        }\n      }\n\n    }\n  },\n\n  render() {\n    if (!this.editor) {\n      return null;\n    }\n\n    return this.$scopedSlots.default({\n      focused: this.editor.view.focused,\n      focus: this.editor.focus,\n      commands: this.editor.commands,\n      isActive: this.editor.isActive,\n      getMarkAttrs: this.editor.getMarkAttrs.bind(this.editor),\n      getNodeAttrs: this.editor.getNodeAttrs.bind(this.editor),\n      menu: this.menu\n    });\n  },\n\n  beforeDestroy() {\n    this.editor.unregisterPlugin('menu_bubble');\n  }\n\n};\n\nclass Menu$2 {\n  constructor({\n    options,\n    editorView\n  }) {\n    this.options = { ...{\n        resizeObserver: true,\n        element: null,\n        onUpdate: () => false\n      },\n      ...options\n    };\n    this.preventHide = false;\n    this.editorView = editorView;\n    this.isActive = false;\n    this.top = 0; // the mousedown event is fired before blur so we can prevent it\n\n    this.mousedownHandler = this.handleClick.bind(this);\n    this.options.element.addEventListener('mousedown', this.mousedownHandler, {\n      capture: true\n    });\n\n    this.focusHandler = ({\n      view\n    }) => {\n      this.update(view);\n    };\n\n    this.options.editor.on('focus', this.focusHandler);\n\n    this.blurHandler = ({\n      event\n    }) => {\n      if (this.preventHide) {\n        this.preventHide = false;\n        return;\n      }\n\n      this.hide(event);\n    };\n\n    this.options.editor.on('blur', this.blurHandler); // sometimes we have to update the position\n    // because of a loaded images for example\n\n    if (this.options.resizeObserver && window.ResizeObserver) {\n      this.resizeObserver = new ResizeObserver(() => {\n        if (this.isActive) {\n          this.update(this.editorView);\n        }\n      });\n      this.resizeObserver.observe(this.editorView.dom);\n    }\n  }\n\n  handleClick() {\n    this.preventHide = true;\n  }\n\n  update(view, lastState) {\n    const {\n      state\n    } = view; // Don't do anything if the document/selection didn't change\n\n    if (lastState && lastState.doc.eq(state.doc) && lastState.selection.eq(state.selection)) {\n      return;\n    }\n\n    if (!state.selection.empty) {\n      this.hide();\n      return;\n    }\n\n    const currentDom = view.domAtPos(state.selection.anchor);\n    const isActive = currentDom.node.innerHTML === '<br>' && currentDom.node.tagName === 'P' && currentDom.node.parentNode === view.dom;\n\n    if (!isActive) {\n      this.hide();\n      return;\n    }\n\n    const parent = this.options.element.offsetParent;\n\n    if (!parent) {\n      this.hide();\n      return;\n    }\n\n    const editorBoundings = parent.getBoundingClientRect();\n    const cursorBoundings = view.coordsAtPos(state.selection.anchor);\n    const top = cursorBoundings.top - editorBoundings.top;\n    this.isActive = true;\n    this.top = top;\n    this.sendUpdate();\n  }\n\n  sendUpdate() {\n    this.options.onUpdate({\n      isActive: this.isActive,\n      top: this.top\n    });\n  }\n\n  hide(event) {\n    if (event && event.relatedTarget && this.options.element.parentNode && this.options.element.parentNode.contains(event.relatedTarget)) {\n      return;\n    }\n\n    this.isActive = false;\n    this.sendUpdate();\n  }\n\n  destroy() {\n    this.options.element.removeEventListener('mousedown', this.mousedownHandler);\n\n    if (this.resizeObserver) {\n      this.resizeObserver.unobserve(this.editorView.dom);\n    }\n\n    this.options.editor.off('focus', this.focusHandler);\n    this.options.editor.off('blur', this.blurHandler);\n  }\n\n}\n\nfunction FloatingMenu (options) {\n  return new Plugin({\n    key: new PluginKey('floating_menu'),\n\n    view(editorView) {\n      return new Menu$2({\n        editorView,\n        options\n      });\n    }\n\n  });\n}\n\nvar EditorFloatingMenu = {\n  props: {\n    editor: {\n      default: null,\n      type: Object\n    }\n  },\n\n  data() {\n    return {\n      menu: {\n        isActive: false,\n        left: 0,\n        bottom: 0\n      }\n    };\n  },\n\n  watch: {\n    editor: {\n      immediate: true,\n\n      handler(editor) {\n        if (editor) {\n          this.$nextTick(() => {\n            editor.registerPlugin(FloatingMenu({\n              editor,\n              element: this.$el,\n              onUpdate: menu => {\n                // the second check ensures event is fired only once\n                if (menu.isActive && this.menu.isActive === false) {\n                  this.$emit('show', menu);\n                } else if (!menu.isActive && this.menu.isActive === true) {\n                  this.$emit('hide', menu);\n                }\n\n                this.menu = menu;\n              }\n            }));\n          });\n        }\n      }\n\n    }\n  },\n\n  render() {\n    if (!this.editor) {\n      return null;\n    }\n\n    return this.$scopedSlots.default({\n      focused: this.editor.view.focused,\n      focus: this.editor.focus,\n      commands: this.editor.commands,\n      isActive: this.editor.isActive,\n      getMarkAttrs: this.editor.getMarkAttrs.bind(this.editor),\n      getNodeAttrs: this.editor.getNodeAttrs.bind(this.editor),\n      menu: this.menu\n    });\n  },\n\n  beforeDestroy() {\n    this.editor.unregisterPlugin('floating_menu');\n  }\n\n};\n\nexport { Doc, Editor, EditorContent, EditorFloatingMenu, EditorMenuBar, EditorMenuBubble, Extension, Mark, Node, Paragraph, Text };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}