{"ast":null,"code":"import { Extension } from '@tiptap/core';\nimport { undo, redo, history } from '@tiptap/pm/history';\nconst History = Extension.create({\n  name: 'history',\n  addOptions() {\n    return {\n      depth: 100,\n      newGroupDelay: 500\n    };\n  },\n  addCommands() {\n    return {\n      undo: () => _ref => {\n        let {\n          state,\n          dispatch\n        } = _ref;\n        return undo(state, dispatch);\n      },\n      redo: () => _ref2 => {\n        let {\n          state,\n          dispatch\n        } = _ref2;\n        return redo(state, dispatch);\n      }\n    };\n  },\n  addProseMirrorPlugins() {\n    return [history(this.options)];\n  },\n  addKeyboardShortcuts() {\n    return {\n      'Mod-z': () => this.editor.commands.undo(),\n      'Mod-y': () => this.editor.commands.redo(),\n      'Shift-Mod-z': () => this.editor.commands.redo(),\n      // Russian keyboard layouts\n      'Mod-я': () => this.editor.commands.undo(),\n      'Shift-Mod-я': () => this.editor.commands.redo()\n    };\n  }\n});\nexport { History, History as default };","map":{"version":3,"names":["History","Extension","create","name","addOptions","depth","newGroupDelay","addCommands","undo","_ref","state","dispatch","redo","_ref2","addProseMirrorPlugins","history","options","addKeyboardShortcuts","Mod-z","editor","commands","Mod-y","Shift-Mod-z","Mod-я","Shift-Mod-я"],"sources":["/Users/xander/go/hexon/frontend/node_modules/@tiptap/extension-history/src/history.ts"],"sourcesContent":["import { Extension } from '@tiptap/core'\nimport { history, redo, undo } from '@tiptap/pm/history'\n\nexport interface HistoryOptions {\n  depth: number,\n  newGroupDelay: number,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    history: {\n      /**\n       * Undo recent changes\n       */\n      undo: () => ReturnType,\n      /**\n       * Reapply reverted changes\n       */\n      redo: () => ReturnType,\n    }\n  }\n}\n\nexport const History = Extension.create<HistoryOptions>({\n  name: 'history',\n\n  addOptions() {\n    return {\n      depth: 100,\n      newGroupDelay: 500,\n    }\n  },\n\n  addCommands() {\n    return {\n      undo: () => ({ state, dispatch }) => {\n        return undo(state, dispatch)\n      },\n      redo: () => ({ state, dispatch }) => {\n        return redo(state, dispatch)\n      },\n    }\n  },\n\n  addProseMirrorPlugins() {\n    return [\n      history(this.options),\n    ]\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-z': () => this.editor.commands.undo(),\n      'Mod-y': () => this.editor.commands.redo(),\n      'Shift-Mod-z': () => this.editor.commands.redo(),\n\n      // Russian keyboard layouts\n      'Mod-я': () => this.editor.commands.undo(),\n      'Shift-Mod-я': () => this.editor.commands.redo(),\n    }\n  },\n})\n"],"mappings":";;AAuBa,MAAAA,OAAO,GAAGC,SAAS,CAACC,MAAM,CAAiB;EACtDC,IAAI,EAAE,SAAS;EAEfC,UAAUA,CAAA;IACR,OAAO;MACLC,KAAK,EAAE,GAAG;MACVC,aAAa,EAAE;KAChB;GACF;EAEDC,WAAWA,CAAA;IACT,OAAO;MACLC,IAAI,EAAEA,CAAA,KAAMC,IAAA,IAAwB;QAAA,IAAvB;UAAEC,KAAK;UAAEC;QAAQ,CAAE,GAAAF,IAAA;QAC9B,OAAOD,IAAI,CAACE,KAAK,EAAEC,QAAQ,CAAC;OAC7B;MACDC,IAAI,EAAEA,CAAA,KAAMC,KAAA,IAAwB;QAAA,IAAvB;UAAEH,KAAK;UAAEC;QAAQ,CAAE,GAAAE,KAAA;QAC9B,OAAOD,IAAI,CAACF,KAAK,EAAEC,QAAQ,CAAC;;KAE/B;GACF;EAEDG,qBAAqBA,CAAA;IACnB,OAAO,CACLC,OAAO,CAAC,IAAI,CAACC,OAAO,CAAC,CACtB;GACF;EAEDC,oBAAoBA,CAAA;IAClB,OAAO;MACL,OAAO,EAAEC,CAAA,KAAM,IAAI,CAACC,MAAM,CAACC,QAAQ,CAACZ,IAAI,EAAE;MAC1C,OAAO,EAAEa,CAAA,KAAM,IAAI,CAACF,MAAM,CAACC,QAAQ,CAACR,IAAI,EAAE;MAC1C,aAAa,EAAEU,CAAA,KAAM,IAAI,CAACH,MAAM,CAACC,QAAQ,CAACR,IAAI,EAAE;;MAGhD,OAAO,EAAEW,CAAA,KAAM,IAAI,CAACJ,MAAM,CAACC,QAAQ,CAACZ,IAAI,EAAE;MAC1C,aAAa,EAAEgB,CAAA,KAAM,IAAI,CAACL,MAAM,CAACC,QAAQ,CAACR,IAAI;KAC/C;;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}